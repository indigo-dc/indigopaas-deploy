---
- name: Check variable letsencrypt_email
  fail:
    msg: "Empty value not allowed for variable letsencrypt_email"
  when: letsencrypt_email|trim == '' 

- name: Check variable domain_name
  fail:
    msg: "Empty value not allowed for variable slam_dns_name"
  when: slam_dns_name|trim == ''

- name: Install letsencrypt
  apt: name=letsencrypt state=present update_cache=true

- name: Create letsencrypt certificate
  shell: letsencrypt certonly -n --standalone -m {{ letsencrypt_email }} --agree-tos -d {{ slam_dns_name }}
  args:
    creates: /etc/letsencrypt/live/{{ slam_dns_name }}

- name: Install default-jre-headless (needed for keytool utility)
  apt: name=default-jre-headless state=present

- name: Import certificates in the keystore
  block: 
   - shell: openssl pkcs12 -export -in /etc/letsencrypt/live/{{ slam_dns_name }}/fullchain.pem -inkey /etc/letsencrypt/live/{{ slam_dns_name }}/privkey.pem -name {{ slam_keystore_alias }} -out /tmp/{{ slam_dns_name }}.p12 -password pass:{{ slam_keystore_password }} 
     args:
       creates: "/tmp/{{ slam_dns_name }}.p12"
  
   - java_cert:
       pkcs12_path: "/tmp/{{ slam_dns_name }}.p12"
       pkcs12_alias: "{{ slam_keystore_alias }}"
       pkcs12_password: "{{ slam_keystore_password  }}"
       keystore_path: "{{ slam_keystore_path }}"
       keystore_pass: "{{ slam_keystore_password  }}"
       keystore_create: yes
       cert_alias: "{{ slam_keystore_alias }}"
       state: present
     notify: restart slam

   - java_cert: 
       cert_url: "{{ item | regex_replace('^https?://(.*)/?', '\\1') }}"
       cert_port: 443
       keystore_path: "{{ slam_keystore_path }}"
       keystore_pass: "{{ slam_keystore_password  }}"
       keystore_create: yes
       state: present
     with_items:
       - "{{slam_iam_url}}"
       - "{{slam_cmdb_url}}"
     notify: restart slam
    
- name: "Import Let's Encrypt X1 and X3 CA"
  block:
    - get_url:
        url: '{{ item.ca_cert_url }}'
        dest: '{{ item.ca_cert_path }}'
      with_items:
        - { ca_cert_url: "https://letsencrypt.org/certs/isrgrootx1.pem.txt", ca_cert_path: "/tmp/isrgrootx1.pem" }
        - { ca_cert_url: "https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt", ca_cert_path: "/tmp/lets-encrypt-x3-cross-signed.pem"}

    - java_cert:
        cert_path: '{{ item.ca_cert_path }}'
        cert_alias: '{{ item.ca_cert_alias }}'
        keystore_path: '{{ slam_keystore_path }}'
        keystore_pass: '{{ slam_keystore_password }}'
        state: present
      with_items:
        - { ca_cert_path: "/tmp/isrgrootx1.pem", ca_cert_alias: "LETSENCRYPT_X1_SSL_CA" }
        - { ca_cert_path: "/tmp/lets-encrypt-x3-cross-signed.pem", ca_cert_alias: "LETSENCRYPT_X3_SSL_CA" }
      notify: restart slam
