---
- name: Check variable letsencrypt_email
  fail:
    msg: "Empty value not allowed for variable letsencrypt_email"
  when: letsencrypt_email|trim == '' 

- name: Check variable domain_name
  fail:
    msg: "Empty value not allowed for variable slam_dns_name"
  when: slam_dns_name|trim == ''

- name: Install letsencrypt
  apt: name=letsencrypt state=present update_cache=true

- name: Create letsencrypt certificate
  shell: letsencrypt certonly -n --standalone -m {{ letsencrypt_email }} --agree-tos -d {{ slam_dns_name }}
  args:
    creates: /etc/letsencrypt/live/{{ slam_dns_name }}

- name: Install default-jre-headless (needed for keytool utility)
  apt: name=default-jre-headless state=present


#- name: Import certificate in the keystore
#  block:
##    - shell: head /dev/urandom | tr -dc A-Za-z0-9 | head -c10
##      register: slam_p12_keystore_password
#    - get_url: 
#        url: https://pki.cesnet.cz/certs/chain_TERENA_SSL_CA_3.pem
#        dest: /tmp/chain_TERENA_SSL_CA_3.pem
#
#    - shell: keytool -import -noprompt -trustcacerts -alias TERENA_SSL_CA_3 -file /tmp/chain_TERENA_SSL_CA_3.pem -storepass {{ slam_keystore_password  }} -keystore {{ slam_keystore_path }}
#
#    - shell: openssl pkcs12 -export -in /etc/letsencrypt/live/{{ slam_dns_name }}/fullchain.pem -inkey /etc/letsencrypt/live/{{ slam_dns_name }}/privkey.pem -name {{ slam_keystore_alias }} -out /tmp/{{ slam_dns_name }}.p12 -password pass:{{ slam_keystore_password }}
#      args:
#        creates: "/tmp/{{ slam_dns_name }}.p12"
#
#    - shell: keytool -noprompt -importkeystore -deststoretype JKS  -destkeystore {{ slam_keystore_path }} -deststorepass {{ slam_keystore_password  }}  -srckeystore /tmp/{{ slam_dns_name }}.p12 -srcstoretype PKCS12 -srcstorepass {{ slam_keystore_password  }} -alias {{ slam_keystore_alias }}
#      args:
#        creates: "{{ slam_keystore_path }}"
#      notify: restart slam
#

#- name: DEBUG
#  debug: msg="{{ item | regex_replace('^https?:\/\/(\.*)\/?', '\\1') }}"
#  with_items:
#    - "{{slam_iam_url}}"
#    - "{{slam_cmdb_url}}"
  
- name: Import certificates in the keystore
  block: 
   - shell: openssl pkcs12 -export -in /etc/letsencrypt/live/{{ slam_dns_name }}/fullchain.pem -inkey /etc/letsencrypt/live/{{ slam_dns_name }}/privkey.pem -name {{ slam_keystore_alias }} -out /tmp/{{ slam_dns_name }}.p12 -password pass:{{ slam_keystore_password }} 
     args:
       creates: "/tmp/{{ slam_dns_name }}.p12"
  
   - java_cert:
       pkcs12_path: "/tmp/{{ slam_dns_name }}.p12"
       pkcs12_alias: "{{ slam_keystore_alias }}"
       pkcs12_password: "{{ slam_keystore_password  }}"
       keystore_path: "{{ slam_keystore_path }}"
       keystore_pass: "{{ slam_keystore_password  }}"
       keystore_create: yes
       cert_alias: "{{ slam_keystore_alias }}"
       state: present
     notify: restart slam

   - java_cert: 
       cert_url: "{{ item | regex_replace('^https?://(.*)/?', '\\1') }}"
       cert_port: 443
       keystore_path: "{{ slam_keystore_path }}"
       keystore_pass: "{{ slam_keystore_password  }}"
       keystore_create: yes
       state: present
     with_items:
       - "{{slam_iam_url}}"
       - "{{slam_cmdb_url}}"
     notify: restart slam
    

