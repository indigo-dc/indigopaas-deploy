---
- name: "create directory path to store the configuration files"
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ dashboard_conf_dir }}" 
    - "{{ dashboard_trusted_certs }}"      
  tags:
    - dashboard

- name: "create dashboard configuration file"
  template:
    src: config.json.j2
    dest: "{{ dashboard_conf_dir }}/config.json"
  notify: restart dashboard  
  tags:
    - dashboard

- name: "create dashboard configuration file for Hashicorp Vault support"
  template:
    src: vault-config.json.j2
    dest: "{{ dashboard_conf_dir }}/vault-config.json"
  when: dashboard_enable_vault|bool
  notify: restart dashboard
  tags:
    - dashboard

- name: 'Check if {{ dashboard_tosca_template_repository_dir }} exists'
  stat:
    path: '{{ dashboard_tosca_template_repository_dir }}'
  register: template_directory

- name: git clone TOSCA configuration file
  git:
    repo: "{{ dashboard_tosca_template_repository_url }}"
    version: "{{ dashboard_tosca_template_version }} "
    dest: "{{ dashboard_tosca_template_repository_dir }}"
  when: not template_directory.stat.exists
  tags:
    - dashboard

- set_fact:
    volumes_to_mount:
      - "{{ dashboard_conf_dir }}/config.json:/app/instance/config.json"
      - "{{ dashboard_tosca_templates_dir }}:/opt/tosca-templates"
      - "{{ dashboard_tosca_parameters_dir }}:/opt/tosca-parameters"
      - "{{ dashboard_tosca_metadata_dir }}:/opt/tosca-metadata"
      - "{{ dashboard_trusted_certs }}:/trusted_certs"  

- block:
    - set_fact:
        certs_volumes_to_mount:
          - "{{ dashboard_ssl_cert_path }}:/certs/cert.pem"
          - "{{ dashboard_ssl_key_path }}:/certs/key.pem"
    - set_fact:
        volumes_to_mount: "{{ volumes_to_mount + certs_volumes_to_mount  }}"
  when: dashboard_enable_https|bool

- block:
    - copy:
        src: "{{ dashboard_ldap_ca_cert_local_path }}"
        dest: "{{ dashboard_trusted_certs }}/{{ dashboard_ldap_ca_cert_local_path | basename }}"     
  when: dashboard_ldap_ca_cert_local_path is defined

- block:
    - set_fact:
        vault_volume_to_mount:
          - "{{ dashboard_conf_dir }}/vault-config.json:/app/instance/vault-config.json"
    - set_fact:
        volumes_to_mount: "{{ volumes_to_mount + vault_volume_to_mount  }}"
  when: dashboard_enable_vault|bool
    
- name: Create a network
  docker_network:
    name: dashboard_default

- name: start dashboard container
  docker_container:
    name: orchestrator-dashboard
    image: "{{ dashboard_image_name }}"
    detach: true
    state: started
    networks:
      - name: dashboard_default
    ports:
      - "{{dashboard_port}}:5001"
    pull: yes
    env:
      ENABLE_HTTPS: '"{{ dashboard_enable_https }}"'
      WORKERS: "{{ dashboard_gunicorn_workers }}"
    volumes: "{{volumes_to_mount}}"
    restart_policy: always
  tags:
    - dashboard
